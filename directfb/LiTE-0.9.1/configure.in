AC_INIT(lite/window.h)

AC_PREREQ(2.52)

AC_CANONICAL_TARGET

AM_CONFIG_HEADER(config.h)



#
# Making releases:
#   DIRECTFB_MICRO_VERSION += 1;
#   DIRECTFB_INTERFACE_AGE += 1;
#   DIRECTFB_BINARY_AGE += 1;
# if any functions have been added, set DIRECTFB_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set DIRECTFB_BINARY_AGE and DIRECTFB_INTERFACE_AGE to 0.
#
LITE_MAJOR_VERSION=0
LITE_MINOR_VERSION=9
LITE_MICRO_VERSION=1
LITE_INTERFACE_AGE=0
LITE_BINARY_AGE=0
LITE_VERSION=$LITE_MAJOR_VERSION.$LITE_MINOR_VERSION.$LITE_MICRO_VERSION

AC_SUBST(LITE_MAJOR_VERSION)
AC_SUBST(LITE_MINOR_VERSION)
AC_SUBST(LITE_MICRO_VERSION)
AC_SUBST(LITE_INTERFACE_AGE)
AC_SUBST(LITE_BINARY_AGE)
AC_SUBST(LITE_VERSION)

AC_DEFINE_UNQUOTED(LITE_VERSION,"$LITE_VERSION",[The LiTE version])

# libtool versioning
LT_RELEASE=$LITE_MAJOR_VERSION.$LITE_MINOR_VERSION
LT_CURRENT=`expr $LITE_MICRO_VERSION - $LITE_INTERFACE_AGE`
LT_BINARY=`expr $LITE_MICRO_VERSION - $LITE_BINARY_AGE`
LT_REVISION=$LITE_INTERFACE_AGE
LT_AGE=`expr $LITE_BINARY_AGE - $LITE_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_BINARY)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

# The earliest version that this release has binary compatibility with.
# This is used for module locations.
BINARY_VERSION=$LITE_MAJOR_VERSION.$LITE_MINOR_VERSION-$LT_BINARY


VERSION=$LITE_VERSION
PACKAGE=LiTE

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)


AC_DISABLE_STATIC

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AM_PROG_LIBTOOL


dnl Clear default CFLAGS
if test x"$CFLAGS" = x"-g -O2"; then
  CFLAGS=
fi
  
CFLAGS="-O3 -pipe $CFLAGS"

if test "x$GCC" = xyes; then
  CFLAGS="-Wall $CFLAGS"
fi

LITE_HAS_FUSIONDALE=0
AC_SUBST(LITE_HAS_FUSIONDALE)
AC_ARG_ENABLE([dale], AS_HELP_STRING([--enable-dale], [enable FusionDale support @<:@default=no@:>@]), [], [enable_dale=no])

DFB_REQUIRED_VERSION=1.0.0
FUSIONDALE_REQ_VERSION=1.6.0

AS_IF([test "x$enable_dale" = "xyes"], [
	FUSION_DALE_DEP="fusiondale >= $FUSIONDALE_REQ_VERSION ilixi >= 0.1.0"
	LITE_HAS_FUSIONDALE=1
], [
	FUSION_DALE_DEP=""
])
PKG_CHECK_MODULES(DFB, directfb >= $DFB_REQUIRED_VERSION $FUSION_DALE_DEP)

AC_SUBST(FUSION_DALE_DEP)
AC_SUBST(DFB_REQUIRED_VERSION)
AC_SUBST(DFB_CFLAGS)
AC_SUBST(DFB_LIBS)

AC_CHECK_HEADERS(stdbool.h)

AC_ARG_WITH(fontdir, 
            [ --with-fontdir=DIR     specify runtime font directory],
            [LITEFONTDIR="$withval"], 
            [LITEFONTDIR=${datadir}/fonts/truetype] )
AC_SUBST(LITEFONTDIR)


AC_ARG_ENABLE(debug,
  [  --enable-debug          enable debugging support [[default=no]]],,
  enable_debug=no)
if test "$enable_debug" = "yes"; then
  CFLAGS="$CFLAGS -g3 -O0"
  CPPFLAGS="$CPPFLAGS -DDIRECT_FORCE_DEBUG"
fi
AM_CONDITIONAL(ENABLE_DEBUG, test "$enable_debug" = "yes")


AC_ARG_ENABLE(trace,
  [  --enable-trace          enable trace support [[default=no]]],,
  enable_trace=no)
if test "$enable_trace" = "yes"; then
  CFLAGS="$CFLAGS -finstrument-functions"
fi
AM_CONDITIONAL(ENABLE_TRACE, test "$enable_trace" = "yes")


AM_CONDITIONAL(BUILD_SHARED, test "$enable_shared" = "yes")
AM_CONDITIONAL(BUILD_STATIC, test "$enable_static" = "yes")


DATADIR=$datadir
AC_SUBST(DATADIR)

CFLAGS="$CFLAGS -Werror-implicit-function-declaration"

AC_OUTPUT([
Makefile
data/Makefile
examples/Makefile
rules/Makefile
tests/Makefile
fonts/Makefile
lite/Makefile
lite/lite_build.h
leck/Makefile
lite.pc
leck.pc
])


AC_MSG_RESULT([
Build options: 
  Version                   $VERSION
  Install prefix            $prefix
  Config files in           $SYSCONFDIR
  Build shared libs         $enable_shared
  Build static libs         $enable_static
  Debugging                 $enable_debug
  Trace Support             $enable_trace
  CPPFLAGS                  $CPPFLAGS
  CFLAGS                    $CFLAGS
  DFB_CFLAGS                $DFB_CFLAGS
  DFB_LIBS                  $DFB_LIBS
  FusionDale support        $enable_dale  
])

